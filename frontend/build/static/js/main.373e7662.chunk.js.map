{"version":3,"sources":["components/proyectos/proyecto_nuevo/form.js","components/proyectos/proyecto_nuevo/nuevoProyecto.js","components/Home/inicio.jpg","components/nav/nav.js","components/Home/home.js","components/proyectos/listarProyectos/listarProyectos.js","components/proyectos/proyecto_nuevo/editarProyecto.js","components/proyectos/proyecto_nuevo/añadirIntegrantes.js","components/proyectos/listarProyectos/listarUno.js","components/usuarios/listarUsuarios/listarUsuarios.js","components/usuarios/nuevoUsuario/nuevoUsuario.js","components/usuarios/editarUsuario/editarUsuario.js","components/login/login.png","components/login/login.js","components/usuarios/nuevoUsuario/registrarUsuario.js","components/avances/verAvances.js","components/avances/formAvances.js","components/avances/nuevoAvance.js","components/avances/avanceCreado.js","components/avances/editarAvances.js","components/inscripciones/estudiantes/consultaEstudiantes.js","components/inscripciones/IngresoInscripcion/ingreso.js","components/inscripciones/IngresoInscripcion/formularioinsc.js","components/inscripciones/estudiantes/actualizaEstado.js","components/inscripciones/IngresoInscripcion/busquedaItems.js","components/inscripciones/IngresoInscripcion/formIncripcion.js","App.js","reportWebVitals.js","index.js"],"names":["MUTATION_PROYECTO","gql","FormProyecto","useMutation","creadorDeProyectos","proyecto","name","generalObjective","specificObjectives","budget","startDate","endDate","status","leader_id","onSubmit","e","preventDefault","value","console","log","variables","parseInt","window","location","href","class","ref","placeholder","required","type","Nproyecto","Container","Row","className","Col","xs","md","NavBar","pagina","Nav","justify","variant","defaultActiveKey","Item","Link","eventKey","Home","style","width","height","src","inicio","alt","MUTATION_PROYECTO_EDITAR","MUTATION_PROYECTO_FASE","Proyectos","useState","count","setCount","fase","setFase","nombre1","setNombre","activadorDeProyectos","updatePhaseProyectos","handleSubmit","reload","handleSubmit1","phase","useQuery","loading","data","datosTabla","proyectos","map","_id","to","Button","ButtonGroup","onClick","Table","striped","bordered","hover","ListaProductos","ButtonToolbar","Component","MUTATION_PROPYECTO_EDITAR","useParams","actualizarProyecto","proyectos1","filter","u","Number","parseFloat","defaultValue","EditarProyecto","identification","AñadirIntegrantes","proyectos2","integrantes","Avances","avances","project_id","addDate","description","observations","ListaProductoFiltro","client","ApolloClient","uri","cache","InMemoryCache","MUTATION_STATUS_EDITAR","Usuarios","estado","setEstado","ident","setIdent","cambiarStatus","usuarios","fullName","email","role","password","ListaUsuarios","display","justifyContent","ApolloProvider","MUTATION_USUARIO","NuevoUsuario","creadorDeUsuario","usuario","id","nombre","rol","MUTATION_USUARIO_EDITAR","actualizarUsuario","user","backgroundColor","readOnly","EditarUsuario","MUTATION_LOGIN","Login","auth","clave","login","RegistrarUsuario","ListarAvances","MUTATION_AVANCE","FormAvances","creadorDeAvances","Avance","NAvance","CreateAvance","MUTATION_AVANCE_EDITAR","actualizarAvance","avance","EditAvance","Inscripciones","inscripciones","user_id","enrollmentDate","egressDate","Ninscripcion","MUTATION_INSCRIPCION","creadorDeInscricion","inscripcion","Phoneform","setName","setPhone","changeNumber","Form","Group","controlId","Label","Control","onChange","evt","target","Text","as","column","sm","Check","label","ListaVentas","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.373e7662.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  gql, useMutation\r\n} from \"@apollo/client\";\r\n\r\nconst MUTATION_PROYECTO=gql`\r\n  mutation crearProyecto($name: String,\r\n      $generalObjective: String,\r\n      $specificObjectives: [String],\r\n      $budget: Float,\r\n      $startDate: String,\r\n      $endDate: String,\r\n      $status: String,\r\n      $leader_id: String){\r\n          createProyecto(Proyecto:{name: $name,\r\n              generalObjective: $generalObjective,\r\n              specificObjectives: $specificObjectives,\r\n              budget: $budget,\r\n              startDate: $startDate,\r\n              endDate: $endDate,\r\n              status: $status,\r\n              leader_id: $leader_id})\r\n       }\r\n`;\r\n\r\n\r\n\r\n\r\nconst FormProyecto =()=>{\r\n  const[creadorDeProyectos] = useMutation(MUTATION_PROYECTO);\r\n  let proyecto ={\r\n    name: \" \",\r\n    generalObjective:\" \",\r\n    specificObjectives: [],\r\n    budget: 0,\r\n    startDate: \" \",\r\n    endDate: \" \",\r\n    status: \" \",\r\n    leader_id:\" \"\r\n  }\r\n  \r\n\r\n        return(\r\n          <form onSubmit={e => {\r\n            e.preventDefault(proyecto.startDate.value);\r\n            console.log(proyecto.startDate.value);\r\n            creadorDeProyectos({variables:{\r\n              name: proyecto.name.value,\r\n              generalObjective: proyecto.generalObjective.value,\r\n              specificObjectives: proyecto.specificObjectives.value,\r\n              budget: parseInt(proyecto.budget.value),\r\n              startDate: proyecto.startDate.value,\r\n              endDate: proyecto.endDate.value,\r\n              status: proyecto.status.value,\r\n              leader_id: proyecto.leader_id.value\r\n          }})\r\n          window.location.href = '/proyectos';\r\n          }}>\r\n\r\n<div>\r\n                <label class=\"p-3\">Nombre Proyecto</label>\r\n                <input ref={name => proyecto.name = name} placeholder=\"Nombre\" required/>\r\n            </div>\r\n            <div>\r\n                <label class=\"p-3\">Objetivos</label>\r\n                <input ref={generalObjective => proyecto.generalObjective = generalObjective} placeholder=\"Objetivos\" required/>\r\n            </div>\r\n            <div>\r\n                <label class=\"p-3\">Objetivos especificos</label>\r\n                <input ref={specificObjectives => proyecto.specificObjectives = specificObjectives} placeholder=\"Objetivos generales\" required/>\r\n            </div>\r\n            <div>\r\n                <label class=\"p-3\">fecha inicial</label>\r\n                <input type=\"date\" ref={startDate => proyecto.startDate = startDate} placeholder=\"fecha inicial\" required/>\r\n            </div>\r\n            <div>\r\n                <label class=\"p-3\" >fecha final</label>\r\n                <input type=\"date\" ref={endDate => proyecto.endDate = endDate} placeholder=\"fecha final\" required/>\r\n            </div>\r\n            <div>\r\n                <label class=\"p-3\">Lider</label>\r\n                <input ref={leader_id => proyecto.leader_id = leader_id} placeholder=\"@ correo del lider\" required/>\r\n            </div>\r\n            <div>\r\n                <label class=\"p-3\">Presupuesto</label>\r\n                <input ref={budget => proyecto.budget = budget} placeholder=\"Presupuesto\" required/>\r\n            </div>\r\n            <div><button class=\"bg-primary ml-4\"type=\"submit\">Registrar Proyecto</button></div>\r\n        </form>\r\n        )\r\n}\r\nexport default FormProyecto;","import Container from 'react-bootstrap/Container';   \r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormProyecto from './form';\r\n\r\nfunction Nproyecto(){\r\n    return(\r\n        <div>\r\n        <header>\r\n          <Container >\r\n            <Row className=\"titulo d-flex justify-content-center mt-1 mb-5\">\r\n              <Col xs={6}>\r\n                <div className=\"text-center mt-4\">\r\n                  <h1 >Nuevo proyecto</h1>\r\n                </div>\r\n              </Col>\r\n            </Row>  \r\n          </Container>\r\n        </header>\r\n        <Container >\r\n          <Row className=\"d-flex justify-content-center mt-5\">\r\n            <Col md={6} xs={10} className=\"border border-dark rounded d-flex justify-content-center \">{/* bg-info */}\r\n            <FormProyecto/>\r\n            </Col>\r\n          </Row>  \r\n        </Container>\r\n      </div>\r\n    )\r\n}\r\nexport default Nproyecto;","export default __webpack_public_path__ + \"static/media/inicio.18c3f6fd.jpg\";","import Nav from 'react-bootstrap/Nav'\r\nconst NavBar = ({ pagina }) => {\r\n    return (\r\n        <Nav justify variant=\"pills\" defaultActiveKey={pagina} className=\"explorer\">\r\n            \r\n            <Nav.Item>\r\n                <Nav.Link href=\"/home\">HOME</Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                <Nav.Link href=\"/proyectos\" eventKey=\"/proyectos\">PROYECTOS</Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                <Nav.Link href=\"/usuarios\" eventKey=\"/usuarios\">USUARIOS</Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n            <Nav.Link href=\"/ListarAvances\" eventKey=\"/ListarAvances\">AVANCES</Nav.Link>\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n            <Nav.Link href=\"/IngresoIncricion\">INSCRIPCIONES</Nav.Link>\r\n        </Nav.Item>\r\n        \r\n\r\n        </Nav>\r\n\r\n    );\r\n}\r\n\r\nexport default NavBar;","//import { Link } from 'react-router-dom';\r\nimport inicio from './inicio.jpg';\r\nimport NavBar from '../nav/nav';\r\n// import Cards from \"./components/Cards\";\r\n\r\nimport React from \"react\";\r\nconst Home = () => {\r\n\r\n  return (\r\n    <div>\r\n      <NavBar pagina={\"/home\"} />\r\n      {/* <Logout/> */}\r\n      <h1 className=\"text-center mt-5 mb-5\">Pagina de Inicio</h1>\r\n      <div className=\"text-center justify-content-center align-items-center\">\r\n        <img style={{ width: \"50%\", height: \"50%\" }} src={inicio} alt=\"logo\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","\r\n  import React, { Component, useState} from \"react\"\r\n  import Row from 'react-bootstrap/Row';\r\n  import Container from 'react-bootstrap/Container';\r\n  import Button from 'react-bootstrap/Button';\r\n  import { Link } from 'react-router-dom'; \r\n  import Table from 'react-bootstrap/Table'\r\n  // import Tabla from './Tabla';\r\n  import ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\n  //import { useParams } from \"react-router-dom\";\r\n  import ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n  import { FaSearch} from \"react-icons/fa\";\r\n  import { GoCheck,GoPencil,GoPlus } from \"react-icons/go\";\r\nimport {\r\n    useQuery,\r\n    gql,useMutation\r\n  } from \"@apollo/client\";\r\n  const MUTATION_PROYECTO_EDITAR=gql`\r\n  mutation crearProyecto($name: String){\r\n        activeProyecto(name:$name)\r\n       }\r\n`;\r\nconst MUTATION_PROYECTO_FASE=gql`\r\n  mutation updatePhaseProyectos($name: String,$phase: String){\r\n    updatePhaseProyectos(name:$name, phase:$phase)\r\n       }\r\n`;\r\n  \r\n  const Proyectos =()=>{\r\n    \r\n    const [count, setCount] = useState(\" \");\r\n    const [fase, setFase] = useState(\" \");\r\n    const [nombre1, setNombre] = useState(\" \");\r\n    //let nombre=\"\";\r\n    const[activadorDeProyectos] = useMutation(MUTATION_PROYECTO_EDITAR);\r\n    const[updatePhaseProyectos] = useMutation(MUTATION_PROYECTO_FASE);\r\n    /*\r\n    let Activarproyecto ={\r\n      name: \" \"\r\n    }\r\n    */\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        activadorDeProyectos({variables:{\r\n                    name: count\r\n                }})\r\n        console.log('You clicked submit.'+count);\r\n        window.location.reload(true);\r\n      }\r\n      function handleSubmit1(e) {\r\n        e.preventDefault();\r\n        updatePhaseProyectos({\r\n            variables: {\r\n                name: nombre1,\r\n                phase: fase\r\n            }\r\n        })\r\n        console.log(fase);\r\n        console.log(nombre1);\r\n        // console.log('You clicked ident.' + ident);\r\n        // console.log('You clicked estado.' + estado);\r\n        window.location.reload(true);\r\n    }\r\n    const {loading,data} = useQuery(gql`\r\n        {\r\n            proyectos{\r\n                _id,\r\n                name\r\n                generalObjective\r\n                specificObjectives\r\n                budget\r\n                startDate\r\n                endDate\r\n                leader_id\r\n                status\r\n                phase\r\n            }\r\n        }\r\n    `)\r\n\r\n    if(loading) return \"<h1>Cargando</h1>\"\r\n    const datosTabla = data.proyectos.map(({_id,name,generalObjective,specificObjectives,budget,startDate,endDate,leader_id,status,phase})=>(\r\n        <tr key={name}>\r\n            <td>{name}</td>\r\n            <td>{generalObjective}</td>\r\n            {/* <td>{budget}</td> */}\r\n            {/* <td>{startDate}</td>  */}\r\n            {/* <td>{endDate}</td> */}\r\n            <td>{leader_id}</td>\r\n            <td>{status}</td>\r\n            <td>{phase}</td>\r\n            <td> <Link to={`/añadir/${name}`}>\r\n                    <Button className=\"m-1 pr-2\" variant=\"primary\"><GoPlus/></Button>\r\n                </Link></td>\r\n            <td>\r\n                <form onSubmit={handleSubmit1}>\r\n                <ButtonGroup aria-label=\"Basic example\">\r\n                    <Button className=\"p-1 \"type=\"submit\" onClick={() => [setFase(\"Iniciado\"), setNombre(name)]} variant=\"info\">Iniciar</Button>\r\n                    <Button className=\"p-1\"type=\"submit\" onClick={() => [setFase(\"En desarrollo\"), setNombre(name)]} variant=\"secondary\">desarrollo</Button>\r\n                    <Button className=\"p-1\"type=\"submit\" onClick={() => [setFase(\"Finalizado\"), setNombre(name)]} variant=\"success\">finalizado</Button>\r\n                </ButtonGroup>\r\n                </form>\r\n            </td>\r\n            <td>\r\n            <form onSubmit={handleSubmit}>\r\n                <Button type=\"submit\"onClick={() => setCount(name)}className=\"pr-2\" variant=\"warning\"><GoCheck/></Button>\r\n            </form>   \r\n            </td>\r\n            <td><Link to={`/proyectos/${name}`}>\r\n                    <Button className=\"m-1\" variant=\"primary\"><FaSearch/></Button>\r\n                </Link>\r\n            </td>\r\n            <td><Link to={`/editarProyecto/${_id}`}>\r\n                    <Button variant=\"danger\"><GoPencil/></Button>\r\n                </Link>\r\n            </td>\r\n        </tr> \r\n      )\r\n      );\r\n\r\n    // if(name){\r\n    //     activadorDeProyectos({variables:{\r\n    //         name: name \r\n    //     }})\r\n    //     console.log(name+\"esta adentro\");\r\n    // }\r\n    \r\n      \r\n      return (\r\n        // <table class=\"table table-success\">\r\n        //   <thead>\r\n        //     <th>Nombre</th>\r\n        //     <th>Objetivo General</th>\r\n        //     <th>Presupuesto</th>\r\n        //     {/* <th>Fecha inicial</th>\r\n        //     <th>Fecha Final</th> */}\r\n        //     <th>Lider</th>\r\n        //     <th>Status</th>\r\n        //   </thead>\r\n        //   {datosTabla}\r\n        // </table>\r\n        <Table striped bordered hover >\r\n            <thead>\r\n                <tr>\r\n                <th>Nombre</th>\r\n                <th>Objetivo General</th>\r\n                <th>Lider</th>\r\n                <th>Status</th>\r\n                <th>Fase del proyecto</th>\r\n                <th>Añadir integrantes</th>\r\n                <th>Actualizar Fase</th>\r\n                <th>Activar</th>\r\n                <th>consultar</th>\r\n                <th>Editar</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {datosTabla}\r\n            </tbody>\r\n        </Table>\r\n        \r\n          )\r\n  }\r\n\r\nclass ListaProductos extends Component {\r\n    render () {\r\n        return (\r\n            <Container>\r\n                <Row  className=\"d-flex justify-content-center align-items-center mt-5\"> \r\n                    <h1 >Proyectos</h1>\r\n                    <ButtonToolbar\r\n                        className=\"justify-content-between mb-4\"\r\n                        aria-label=\"Toolbar with Button groups\"\r\n                        >\r\n                        <Link to=\"/Nproyecto\">\r\n                            <Button variant=\"primary\">Nuevo proyecto</Button>\r\n                        </Link>\r\n                    </ButtonToolbar>\r\n                    \r\n                    <Proyectos/>\r\n                    \r\n                    \r\n                </Row> \r\n            </Container>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default ListaProductos;","import React, { Component } from \"react\"\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link, useParams } from 'react-router-dom';\r\n//import Table from 'react-bootstrap/Table'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport {\r\n    //ApolloClient,\r\n    //InMemoryCache,\r\n    useQuery,\r\n    useMutation,\r\n    gql\r\n} from \"@apollo/client\";\r\n/*\r\nconst client = new ApolloClient({\r\n    uri: 'http://localhost:9091/consulta',\r\n    cache: new InMemoryCache()\r\n});\r\n*/\r\nconst MUTATION_PROPYECTO_EDITAR = gql`\r\n    mutation updateProyecto($_id:ID, $name:String, $generalObjective:String, $specificObjectives:String, $budget:Float){\r\n        updateProyecto(_id:$_id, name:$name, generalObjective:$generalObjective, specificObjectives:$specificObjectives, budget:$budget)\r\n    }\r\n`;\r\n\r\nconst Proyectos= () => {\r\n\r\n    const { _id } = useParams();\r\n    console.log(_id);\r\n\r\n    const [actualizarProyecto] = useMutation(MUTATION_PROPYECTO_EDITAR);\r\n    let proyecto = {\r\n        name: \"\",\r\n        generalObjective:\"\",\r\n        specificObjectives: \"\",\r\n        budget: 1.1\r\n    }\r\n\r\n    const { loading, data } = useQuery(gql`\r\n        {\r\n            proyectos{\r\n                _id\r\n                name\r\n                generalObjective\r\n                specificObjectives\r\n                budget   \r\n            }\r\n        }\r\n    `)\r\n\r\n    console.log(data);\r\n\r\n    if (loading) return \"<h1>Cargando</h1>\"\r\n    let proyectos1 = data.proyectos.filter(function (u) { return u._id === _id }).map(({ _id,name, generalObjective, specificObjectives, budget}) => (\r\n        <form onSubmit={e => {\r\n            e.preventDefault();\r\n            actualizarProyecto({\r\n                variables: {\r\n                    _id: _id,\r\n                    name: proyecto.name.value,\r\n                    generalObjective: proyecto.generalObjective.value,\r\n                    specificObjectives: proyecto.specificObjectives.value,\r\n                    budget:Number.parseFloat( proyecto.budget.value)\r\n                }\r\n            })\r\n            console.log(budget);\r\n            window.location.href = '/proyectos';\r\n        }} >\r\n            <div className=\"text-center justify-content-center align-items-center\">\r\n                <div> \r\n                    <label>Nombre:</label>\r\n                    <input style={{width: \"300px\"}} defaultValue={name} type=\"text\" ref={name => proyecto.name = name} placeholder=\"Nombre del Usuario\" required/>\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label>generalObjective:</label>\r\n                    <input defaultValue={generalObjective} type=\"text\" ref={generalObjective => proyecto.generalObjective = generalObjective} placeholder=\"Identificación\" required/>\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label>specificObjectives:</label>\r\n                    <input style={{width: \"250px\"}} defaultValue={specificObjectives} type=\"text\" ref={specificObjectives => proyecto.specificObjectives = specificObjectives} placeholder=\"Email\" required/>\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label>Presupuesto:</label>\r\n                    <input defaultValue={budget} type=\"text\" ref={budget => proyecto.budget = budget} placeholder=\"Contraseña\" required/>\r\n                </div>\r\n                <div>\r\n                    <button variant=\"primary\" type=\"submit\">Actualizar</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    ));\r\n\r\n    return (\r\n        <div>{proyectos1}</div>\r\n    )\r\n}\r\n\r\nclass EditarProyecto extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                    <h1 className=\"d-flex justify-content-center align-items-center mt-5\">Editar Proyecto</h1>\r\n                    <ButtonToolbar>\r\n                        <Link to=\"/proyectos\">\r\n                            <Button variant=\"primary\">Volver</Button>\r\n                        </Link>\r\n                    </ButtonToolbar>\r\n                    &nbsp;\r\n                    <Proyectos/>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditarProyecto;","import React, { Component } from \"react\"\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link, useParams } from 'react-router-dom';\r\n//import Table from 'react-bootstrap/Table'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport {\r\n    //ApolloClient,\r\n    //InMemoryCache,\r\n    useQuery,\r\n    useMutation,\r\n    gql\r\n} from \"@apollo/client\";\r\n/*\r\nconst client = new ApolloClient({\r\n    uri: 'http://localhost:9091/consulta',\r\n    cache: new InMemoryCache()\r\n});\r\n*/\r\nconst MUTATION_PROPYECTO_EDITAR = gql`\r\n    mutation insertUserToProyecto($identification:String, $name:String){\r\n        insertUserToProyecto(identification:$identification, name:$name)\r\n    }\r\n`;\r\n\r\nconst Proyectos= () => {\r\n\r\n    const { _id } = useParams();\r\n    console.log(_id);\r\n\r\n    const [actualizarProyecto] = useMutation(MUTATION_PROPYECTO_EDITAR);\r\n    let proyecto = {\r\n        name: \"\"\r\n    }\r\n\r\n    const { loading, data } = useQuery(gql`\r\n        {\r\n            proyectos{\r\n                _id\r\n                name\r\n                generalObjective\r\n                specificObjectives\r\n                budget   \r\n            }\r\n        }\r\n    `)\r\n\r\n    console.log(data);\r\n\r\n    if (loading) return \"<h1>Cargando</h1>\"\r\n    let proyectos1 = data.proyectos.filter(function (u) { return u.name === _id }).map(({name}) => (\r\n        <form onSubmit={e => {\r\n            e.preventDefault();\r\n            actualizarProyecto({\r\n                variables: {\r\n                    identification:proyecto.identification.value,\r\n                    name: name\r\n                }\r\n            })\r\n            window.location.href = '/proyectos';\r\n        }} >\r\n            <div className=\"text-center justify-content-center align-items-center\">\r\n                <div> \r\n                    <h2>{name}</h2>\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label class=\"p-3\">Añadir integrante:</label>\r\n                    <input type=\"text\" ref={identification=> proyecto.identification = identification} placeholder=\"Identificación persona\" />\r\n                    <label>Para añadir integrantes al proyecto la persona dede estar con estado Autorizado</label>\r\n                </div>\r\n                <div>\r\n                    <button class=\"mt-2 bg-info\" type=\"submit\">Añadir Integrante</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    ));\r\n\r\n    return (\r\n        <div>{proyectos1}</div>\r\n    )\r\n}\r\n\r\nclass AñadirIntegrantes extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                <Container >\r\n                    <Row className=\"titulo d-flex justify-content-center mt-1 mb-5\">\r\n                    <Col xs={6}>\r\n                        <div className=\"text-center mt-4\">\r\n                        <h1 >Añadir Integrantes</h1>\r\n                        </div>\r\n                    </Col>\r\n                    </Row>  \r\n                    <ButtonToolbar>\r\n                            <Link to=\"/proyectos\">\r\n                                <Button variant=\"primary\">Volver</Button>\r\n                            </Link>\r\n                        </ButtonToolbar>\r\n                </Container>\r\n                </header>\r\n                <Container >\r\n                <Row className=\"d-flex justify-content-center mt-5\">\r\n                    <Col md={6} xs={10} className=\"border border-dark rounded d-flex justify-content-center \">{/* bg-info */}\r\n                    <Proyectos/>\r\n                    </Col>\r\n                </Row>  \r\n                </Container>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default AñadirIntegrantes;","\r\n  import React, { Component } from \"react\"\r\n  import Row from 'react-bootstrap/Row';\r\n  import Container from 'react-bootstrap/Container';\r\n  import Button from 'react-bootstrap/Button';\r\n  import { Link } from 'react-router-dom'; \r\n  import Table from 'react-bootstrap/Table'\r\n  // import Tabla from './Tabla';\r\n  import ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\n  import { useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n    useQuery,\r\n    gql\r\n  } from \"@apollo/client\";\r\n  \r\n  const Proyectos =()=>{\r\n    const {name}=useParams();\r\n    const {loading,data} = useQuery(gql`\r\n        {\r\n            proyectos{\r\n                name\r\n                generalObjective\r\n                specificObjectives\r\n                budget\r\n                startDate\r\n                endDate\r\n                leader_id\r\n                status\r\n                phase\r\n                integrantes\r\n            }\r\n        }\r\n    `)\r\n  \r\n    if(loading) return \"<h1>Cargando</h1>\"\r\n    let proyectos2 = data.proyectos.filter(function (proyecto) {\r\n        return proyecto.name === name;\r\n    }).map(({name,generalObjective,specificObjectives,budget,startDate,endDate,leader_id,status,phase,integrantes})=>(\r\n      \r\n        <tr key={name}>\r\n            <td>{name}</td>\r\n            <td>{generalObjective}</td>\r\n            <td>{specificObjectives}</td>\r\n            <td>{budget}</td>\r\n            <td>{startDate}</td> \r\n            <td>{endDate}</td>\r\n            <td>{leader_id}</td>\r\n            <td>{status}</td>\r\n            <td>{phase}</td>\r\n            <td>{integrantes}</td>\r\n        </tr> \r\n       \r\n      )\r\n      );\r\n     \r\n      return (\r\n        <div>\r\n            <Table striped bordered hover >\r\n            <thead>\r\n                <tr>\r\n                <th>Nombre</th>\r\n                <th>Objetivo General</th>\r\n                <th>Objetivos especificos</th>\r\n                <th>Objetivos especificos</th>\r\n                <th>Presupuesto</th>\r\n                <th>Fecha Final</th>\r\n                <th>Lider</th>\r\n                <th>Status</th>\r\n                <th>Fase</th>\r\n                <th>Intengrantes</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {proyectos2}\r\n            </tbody>\r\n        </Table>\r\n\r\n        </div>\r\n          )\r\n  }\r\n  const Avances =()=>{\r\n    const {name}=useParams();\r\n    const {loading,data} = useQuery(gql`\r\n        {\r\n            avances{\r\n                project_id\r\n                addDate\r\n                description\r\n                observations\r\n            }\r\n        }\r\n    `)\r\n    if(loading) return \"<h1>Cargando</h1>\"\r\n      let datosTabla= data.avances.filter(function (proyecto) {\r\n        return proyecto.project_id === name;\r\n    }).map(({project_id,addDate,description,observations})=>(\r\n        <tr>\r\n            <td>{project_id}</td>\r\n            <td>{addDate}</td>\r\n            <td>{description}</td>\r\n            <td>{observations}</td>\r\n        </tr>\r\n      ));\r\n      return (\r\n        \r\n        <Table striped bordered hover >\r\n            <thead>\r\n                <tr>\r\n                <th>Nombre del proyecto</th>\r\n                <th>Fecha de avance</th>\r\n                <th>Descripción</th>\r\n                <th>Observaciones</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {datosTabla}\r\n            </tbody>\r\n        </Table>\r\n          \r\n          )\r\n  }\r\nclass ListaProductoFiltro extends Component {\r\n    render () {\r\n        return (\r\n            <Container>\r\n                <Row  className=\"d-flex justify-content-center align-items-center mt-5\"> \r\n                    <h1 >Proyectos</h1>\r\n                    <ButtonToolbar\r\n                        className=\"justify-content-between mb-4\"\r\n                        aria-label=\"Toolbar with Button groups\"\r\n                        >\r\n                        <Link to=\"/proyectos\">\r\n                            <Button variant=\"primary\">Volver</Button>\r\n                        </Link>\r\n                    </ButtonToolbar>\r\n                    \r\n                    <Proyectos/>\r\n                    <h1 >Avance Asociado al Proyecto</h1>\r\n                    <Avances/>\r\n                    \r\n                </Row> \r\n            </Container>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default ListaProductoFiltro;","import React, { Component, useState } from \"react\"\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport {\r\n    ApolloClient,\r\n    InMemoryCache,\r\n    ApolloProvider,\r\n    useQuery,\r\n    useMutation,\r\n    gql\r\n} from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n    uri: 'http://localhost:9091/consulta',\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nconst MUTATION_STATUS_EDITAR = gql`\r\n    mutation updateStatusUsuario($identification: String, $status: String){\r\n        updateStatusUsuario(identification:$identification, status:$status)\r\n    }\r\n`;\r\n\r\nconst Usuarios = () => {\r\n\r\n    const [estado, setEstado] = useState(\"\");\r\n    const [ident, setIdent] = useState(\"\");\r\n    const [cambiarStatus] = useMutation(MUTATION_STATUS_EDITAR);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        cambiarStatus({\r\n            variables: {\r\n                identification: ident,\r\n                status: estado\r\n            }\r\n        })\r\n        console.log(estado);\r\n        console.log(ident);\r\n        // console.log('You clicked ident.' + ident);\r\n        // console.log('You clicked estado.' + estado);\r\n        window.location.reload(true);\r\n    }\r\n\r\n    /*\r\n    const estados = [\r\n        { id: 1, nombre: \"Autorizado\" },\r\n        { id: 2, nombre: \"No Autorizado\" }\r\n    ];\r\n    */\r\n    const { loading, data } = useQuery(gql`\r\n        {\r\n            usuarios{\r\n                _id\r\n                fullName\r\n                identification\r\n                email\r\n                password\r\n                role\r\n                status\r\n            }\r\n        }\r\n    `)\r\n\r\n    if (loading) return \"<h1>Cargando</h1>\"\r\n    const datosTabla = data.usuarios.map(({ _id, fullName, identification, email, password, role, status }) => (\r\n        <tr key={identification}>\r\n            <td>{fullName}</td>\r\n            <td>{identification}</td>\r\n            <td>{email}</td>\r\n            <td>{role}</td>\r\n            <td>{status}</td>\r\n            <td>\r\n                <Link to={`/editarUsuario/${_id}`}>\r\n                    <Button variant=\"warning\">Editar</Button>\r\n                </Link>\r\n            </td>\r\n            <td>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Button type=\"submit\" onClick={() => [setEstado(\"Autorizado\"), setIdent(identification)]} variant=\"success\">Autorizar</Button>\r\n                    <Button type=\"submit\" onClick={() => [setEstado(\"No Autorizado\"), setIdent(identification)]} variant=\"danger\">Denegar</Button>\r\n                </form>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <Table striped bordered hover >\r\n            <thead className=\"text-center justify-content-center align-items-center\">\r\n                <tr>\r\n                    <th>Nombre</th>\r\n                    <th>Identificación</th>\r\n                    <th>Email</th>\r\n                    <th>Rol</th>\r\n                    <th>Estado</th>\r\n                    <th>Opciones</th>\r\n                    <th>Cambiar Estado</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody className=\"text-center justify-content-center align-items-center\">\r\n                {datosTabla}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nclass ListaUsuarios extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                    <h1 className=\"d-flex justify-content-center align-items-center mt-5\">Usuarios</h1>\r\n                    &nbsp;\r\n                    <ButtonToolbar\r\n                        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n                        aria-label=\"Toolbar with Button groups\"\r\n                    >\r\n                        <Link to=\"/crearUsuario\">\r\n                            <Button variant=\"primary\">Nuevo Usuario</Button>\r\n                        </Link>\r\n                    </ButtonToolbar>\r\n                    &nbsp;\r\n                    <ApolloProvider client={client}>\r\n                        <Usuarios />\r\n                    </ApolloProvider>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListaUsuarios;","import {\r\n    gql, useMutation\r\n} from \"@apollo/client\";\r\nimport React from \"react\";\r\n//import Form from 'react-bootstrap/Form';\r\n\r\nconst MUTATION_USUARIO = gql`\r\n        mutation creeUsuario($fullName:String, $identification:String, $email: String, $password:String, $role:String){\r\n        createUsuario(Usuario:{fullName:$fullName, identification:$identification, email:$email, password:$password, role:$role})\r\n    }\r\n`;\r\n\r\nconst NuevoUsuario = () => {\r\n\r\n    const [creadorDeUsuario] = useMutation(MUTATION_USUARIO)\r\n    let usuario = {\r\n        fullName: \"\",\r\n        identification: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        role: \"\"\r\n    }\r\n\r\n    const roles = [\r\n        { id: 1, nombre: \"Administrador\" },\r\n        { id: 2, nombre: \"Lider\" },\r\n        { id: 3, nombre: \"Estudiante\" }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"text-center justify-content-center align-items-center\">\r\n            &nbsp;\r\n            <h1>Crear Usuario</h1>\r\n            &nbsp;\r\n            <form onSubmit={e => {\r\n                e.preventDefault();\r\n                creadorDeUsuario({\r\n                    variables: {\r\n                        fullName: usuario.fullName.value,\r\n                        identification: usuario.identification.value,\r\n                        email: usuario.email.value,\r\n                        password: usuario.password.value,\r\n                        role: usuario.role.value\r\n                    }\r\n                })\r\n                window.location.href = '/usuarios';\r\n            }} >\r\n                <div>\r\n                    <div>\r\n                        <label>Nombre del Usuario:</label>\r\n                        <input style={{ width: \"300px\" }} type=\"text\" ref={fullName => usuario.fullName = fullName} placeholder=\"Nombre del Usuario\" />\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <label>Identificación:</label>\r\n                        <input type=\"text\" ref={identification => usuario.identification = identification} placeholder=\"Identificación\" />\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <label>Email:</label>\r\n                        <input style={{ width: \"250px\" }} type=\"text\" ref={email => usuario.email = email} placeholder=\"Email\" />\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <label>Contraseña:</label>\r\n                        <input type=\"password\" ref={password => usuario.password = password} placeholder=\"Contraseña\" />\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <label>Rol:</label>\r\n                        <select ref={role => usuario.role = role}>\r\n                            <option>Seleccione un rol...</option>\r\n                            {roles.map(rol => (\r\n                                <option value={rol.nombre}>{rol.nombre}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <button type=\"submit\">Registrar</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default NuevoUsuario;","import React, { Component } from \"react\"\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\n//import Button from 'react-bootstrap/Button';\r\nimport { useParams } from 'react-router-dom';\r\n//import Table from 'react-bootstrap/Table'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport {\r\n    //ApolloClient,\r\n    //InMemoryCache,\r\n    //ApolloProvider,\r\n    useQuery,\r\n    useMutation,\r\n    gql\r\n} from \"@apollo/client\";\r\n/*\r\nconst client = new ApolloClient({\r\n    uri: 'http://localhost:9091/consulta',\r\n    cache: new InMemoryCache()\r\n});\r\n*/\r\nconst MUTATION_USUARIO_EDITAR = gql`\r\n    mutation updateUsuario($_id:ID, $fullName:String, $identification:String, $email:String, $password:String, $role:String, $status:String){\r\n        updateUsuario(_id:$_id, fullName:$fullName, identification:$identification, email:$email, password:$password, role:$role, status:$status)\r\n    }\r\n`;\r\n\r\nconst Usuarios = () => {\r\n\r\n    const { _id } = useParams();\r\n    console.log(_id);\r\n\r\n    const [actualizarUsuario] = useMutation(MUTATION_USUARIO_EDITAR);\r\n    let usuario = {\r\n        fullName: \"\",\r\n        identification: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        role: \"\",\r\n        status: \"\"\r\n    }\r\n\r\n    const { loading, data } = useQuery(gql`\r\n        {\r\n            usuarios{\r\n                _id\r\n                fullName\r\n                identification\r\n                email\r\n                password\r\n                role\r\n                status\r\n            }\r\n        }\r\n    `)\r\n\r\n    console.log(data);\r\n\r\n    if (loading) return \"<h1>Cargando</h1>\"\r\n    let user = data.usuarios.filter(function (u) { return u._id === _id }).map(({ _id, fullName, identification, email, password, role, status }) => (\r\n        <form onSubmit={e => {\r\n            e.preventDefault();\r\n            actualizarUsuario({\r\n                variables: {\r\n                    _id: _id,\r\n                    fullName: usuario.fullName.value,\r\n                    identification: usuario.identification.value,\r\n                    email: usuario.email.value,\r\n                    password: usuario.password.value,\r\n                    role: usuario.role.value,\r\n                    status: usuario.status.value\r\n                }\r\n            })\r\n            window.location.href = '/usuarios';\r\n        }} >\r\n            <div className=\"text-center justify-content-center align-items-center\">\r\n                <div>\r\n                    <label>Nombre del Usuario:</label>\r\n                    <input style={{width: \"300px\"}} defaultValue={fullName} type=\"text\" ref={fullName => usuario.fullName = fullName} placeholder=\"Nombre del Usuario\" required/>\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label>Identificación:</label>\r\n                    <input defaultValue={identification} type=\"text\" ref={identification => usuario.identification = identification} placeholder=\"Identificación\"required />\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <input style={{width: \"250px\"}} defaultValue={email} type=\"text\" ref={email => usuario.email = email} placeholder=\"Email\" required/>\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label>Contraseña:</label>\r\n                    <input defaultValue={password} type=\"password\" ref={password => usuario.password = password} placeholder=\"Contraseña\" required/>\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label>Rol:</label>\r\n                    <input style={{ backgroundColor: \"#c9c9c9\" }} defaultValue={role} type=\"text\" ref={role => usuario.role = role} placeholder=\"Rol\" readOnly />\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label>Estado:</label>\r\n                    <input style={{ backgroundColor: \"#c9c9c9\" }} defaultValue={status} type=\"text\" ref={status => usuario.status = status} placeholder=\"Estado\" readOnly />\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <button variant=\"primary\" type=\"submit\">Actualizar</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    ));\r\n\r\n    return (\r\n        <div>{user}</div>\r\n    )\r\n}\r\n\r\nclass EditarUsuario extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                    <h1 className=\"d-flex justify-content-center align-items-center mt-5\">Editar Usuario</h1>\r\n                    &nbsp;\r\n                    <ButtonToolbar\r\n                        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n                        aria-label=\"Toolbar with Button groups\"\r\n                    >\r\n                    </ButtonToolbar>\r\n                    &nbsp;\r\n                    <Usuarios />\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditarUsuario;","export default __webpack_public_path__ + \"static/media/login.e045fdc5.png\";","import React from \"react\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport login from './login.png';\r\n//import Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    gql, useMutation\r\n} from \"@apollo/client\";\r\n\r\nconst MUTATION_LOGIN = gql`\r\n        mutation autenticar($usuario:String, $clave:String){\r\n            autenticar(usuario:$usuario, clave:$clave)\r\n    }\r\n`;\r\n\r\nconst Login = () => {\r\n\r\n    const [auth] = useMutation(MUTATION_LOGIN)\r\n    let user = {\r\n        usuario: \"\",\r\n        clave: \"\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center justify-content-center align-items-center\">\r\n            <Container>\r\n                <Row className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                    <h1 className=\"d-flex justify-content-center align-items-center mt-5\">Login</h1>\r\n                    &nbsp;\r\n                    <img style={{ width: \"20%\", height: \"20%\" }} src={login} alt=\"logo\" />\r\n                    &nbsp;\r\n                </Row>\r\n            </Container>\r\n            &nbsp;\r\n            <form onSubmit={e => {\r\n                e.preventDefault();\r\n                auth({\r\n                    variables: {\r\n                        usuario: user.usuario.value,\r\n                        clave: user.clave.value\r\n                    }\r\n                })\r\n                console.log(user);\r\n                // console.log(clave);\r\n                // window.location.href = '/usuarios';\r\n            }} >\r\n                <div>\r\n                    <div>\r\n                        <label>Email:</label>\r\n                        <input type=\"text\" ref={usuario => user.usuario = usuario} placeholder=\"email\"></input>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <label>Contraseña:</label>\r\n                        <input type=\"text\" ref={clave => user.clave = clave} placeholder=\"contraseña\"></input>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <Link to=\"/registrarUsuario\">\r\n                            <a href=\"#Reg\">Registrarse</a>\r\n                        </Link>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <button type=\"submit\">Inicio</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import {\r\n    gql, useMutation\r\n} from \"@apollo/client\";\r\nimport React from \"react\";\r\n//import Form from 'react-bootstrap/Form';\r\n\r\nconst MUTATION_USUARIO = gql`\r\n        mutation creeUsuario($fullName:String, $identification:String, $email: String, $password:String, $role:String){\r\n        createUsuario(Usuario:{fullName:$fullName, identification:$identification, email:$email, password:$password, role:$role})\r\n    }\r\n`;\r\n\r\nconst RegistrarUsuario = () => {\r\n\r\n    const [creadorDeUsuario] = useMutation(MUTATION_USUARIO)\r\n    let usuario = {\r\n        fullName: \"\",\r\n        identification: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        role: \"\"\r\n    }\r\n\r\n    const roles = [\r\n        { id: 1, nombre: \"Administrador\" },\r\n        { id: 2, nombre: \"Lider\" },\r\n        { id: 3, nombre: \"Estudiante\" }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"text-center justify-content-center align-items-center\">\r\n            &nbsp;\r\n            <h1>Crear Usuario</h1>\r\n            &nbsp;\r\n            <form onSubmit={e => {\r\n                e.preventDefault();\r\n                creadorDeUsuario({\r\n                    variables: {\r\n                        fullName: usuario.fullName.value,\r\n                        identification: usuario.identification.value,\r\n                        email: usuario.email.value,\r\n                        password: usuario.password.value,\r\n                        role: usuario.role.value\r\n                    }\r\n                })\r\n                window.location.href = '/login';\r\n            }} >\r\n                <div>\r\n                    <div>\r\n                        <label>Nombre del Usuario:</label>\r\n                        <input style={{ width: \"300px\" }} type=\"text\" ref={fullName => usuario.fullName = fullName} placeholder=\"Nombre del Usuario\" required/>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <label>Identificación:</label>\r\n                        <input type=\"text\" ref={identification => usuario.identification = identification} placeholder=\"Identificación\" required/>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <label>Email:</label>\r\n                        <input style={{ width: \"250px\" }} type=\"text\" ref={email => usuario.email = email} placeholder=\"Email\" required/>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <label>Contraseña:</label>\r\n                        <input type=\"password\" ref={password => usuario.password = password} placeholder=\"Contraseña\" required/>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <label>Rol:</label>\r\n                        <select ref={role => usuario.role = role}>\r\n                            <option>Seleccione un rol...</option>\r\n                            {roles.map(rol => (\r\n                                <option value={rol.nombre}>{rol.nombre}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    &nbsp;\r\n                    <div>\r\n                        <button type=\"submit\">Registrar</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default RegistrarUsuario;","  import React, { Component } from \"react\"\r\n  import Row from 'react-bootstrap/Row';\r\n  import Container from 'react-bootstrap/Container';\r\n  import Button from 'react-bootstrap/Button';\r\n  import { Link } from 'react-router-dom'; \r\n  import Table from 'react-bootstrap/Table'\r\n  // import Tabla from './Tabla';\r\n  import ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\n  \r\nimport {\r\n    ApolloClient,\r\n    InMemoryCache,\r\n    ApolloProvider,\r\n    useQuery,\r\n    gql\r\n  } from \"@apollo/client\";\r\n  const client = new ApolloClient({\r\n    uri: 'http://localhost:9091/consulta',\r\n    cache: new InMemoryCache()\r\n  }); \r\n  \r\n  const Avances =()=>{\r\n    const {loading,data} = useQuery(gql`\r\n        {\r\n            avances{\r\n                project_id\r\n                addDate\r\n                description\r\n                observations\r\n            }\r\n        }\r\n    `)\r\n    if(loading) return \"<h1>Cargando</h1>\"\r\n      const datosTabla = data.avances.map(({project_id,addDate,description,observations})=>(\r\n        <tr>\r\n            <td>{project_id}</td>\r\n            <td>{addDate}</td>\r\n            <td>{description}</td>\r\n            <td>{observations}</td>\r\n            <td><Link to={`/editarAvances/${project_id}`}>\r\n                    <Button variant=\"warning\">Editar Avance</Button>\r\n                </Link></td>\r\n        </tr>\r\n      ));\r\n      return (\r\n        \r\n        <Table striped bordered hover >\r\n            <thead>\r\n                <tr>\r\n                <th>Nombre del proyecto</th>\r\n                <th>Fecha de avance</th>\r\n                <th>Descripción</th>\r\n                <th>Observaciones</th>\r\n                <th>Editar Avances</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {datosTabla}\r\n            </tbody>\r\n        </Table>\r\n          \r\n          )\r\n  }\r\n\r\n  class ListarAvances extends Component {\r\n    render () {\r\n        return (\r\n            <Container>\r\n                <Row  className=\"d-flex justify-content-center align-items-center mt-5\"> \r\n                    <h1>Lista de Avances</h1>\r\n                    <ButtonToolbar\r\n                        className=\"justify-content-between mb-4\"\r\n                        aria-label=\"Toolbar with Button groups\"\r\n                        >\r\n                        <Link to=\"/nuevoAvance\">\r\n                            <Button variant=\"primary\">Nuevo Avance</Button>\r\n                        </Link>\r\n\r\n                        \r\n                    </ButtonToolbar>\r\n                    <ApolloProvider client={client}>\r\n                        <Avances/>\r\n                    </ApolloProvider>\r\n                    \r\n                </Row> \r\n            </Container>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default ListarAvances;","\r\nimport React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\n//import { Link } from 'react-router-dom'; \r\n//import ListarAvances from \"./verAvances\";\r\nimport {\r\n  gql, useMutation\r\n} from \"@apollo/client\";\r\n\r\nconst MUTATION_AVANCE = gql`\r\n  mutation createAvance($project_id: String,$description: String,$observations: String){\r\n          createAvance(Avance: {project_id: $project_id,description: $description,observations: $observations})\r\n       }\r\n`;\r\n\r\nconst FormAvances =()=>{\r\n  const[creadorDeAvances] = useMutation(MUTATION_AVANCE);\r\n  let Avance ={\r\n    project_id: \" \",\r\n    addDate:\" \",\r\n    description: \" \",\r\n    observations: \" \"\r\n  }\r\n  \r\n\r\n        return(\r\n          <form onSubmit={e => {\r\n            e.preventDefault();\r\n            console.log(Avance.project_id+''+Avance.addDate+''+Avance.description+''+Avance.observations);\r\n            creadorDeAvances({variables:{\r\n              project_id: Avance.project_id.value,\r\n              addDate: Avance.addDate.value,\r\n              description: Avance.description.value,\r\n              observations: Avance.observations.value\r\n          }})\r\n          window.location.href = '/ListarAvances';\r\n          }}>\r\n\r\n<div className=\"text-center justify-content-center align-items-center\">\r\n            <div>\r\n                <label className=\"p-3\">Nombre Proyecto</label>\r\n                <input ref={project_id => Avance.project_id = project_id} placeholder=\"Nombre\" required />\r\n            </div>\r\n            <div>\r\n                <label className=\"p-3\">Fecha</label>\r\n                <input type=\"date\" ref={addDate => Avance.addDate = addDate} placeholder=\"Fecha\" required/>\r\n            </div>\r\n            <div>\r\n                <label className=\" p-3\">Descripción</label>\r\n                <input ref={description => Avance.description = description} placeholder=\"Descripción\" required/>\r\n            </div>\r\n            <div>\r\n                <label className=\" p-3\">Observaciones</label>\r\n                <input ref={observations => Avance.observations = observations} placeholder=\"Observaciones\" required/>\r\n            </div>\r\n        \r\n        <br/>   \r\n        <div className=\"text-center justify-content-center align-items-center\">\r\n            <div><Button className=\"bg-primary ml-4\"type=\"submit\">Registrar Avance</Button></div>\r\n            <div>\r\n              <br/>\r\n                    \r\n              </div>\r\n        </div>\r\n        \r\n        <br/>\r\n        </div>\r\n        </form>\r\n      \r\n        )\r\n}\r\nexport default FormAvances;","import Container from 'react-bootstrap/Container';   \r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormAvances from './formAvances';\r\nfunction NAvance(){\r\n    return(\r\n        <div>\r\n        <header>\r\n          <Container >\r\n            <Row className=\"titulo d-flex justify-content-center mt-1 mb-5\">\r\n              <Col xs={8}>\r\n                <div className=\"text-center mt-8\">\r\n                  <h1 >Agregar Avance</h1>\r\n                </div>\r\n              </Col>\r\n            </Row>  \r\n          </Container>\r\n        </header>\r\n        <Container >\r\n          <Row className=\"d-flex justify-content-center mt-6\">\r\n            <Col md={8} xs={10} className=\"border border-dark rounded d-flex justify-content-center \">{/* bg-info */}\r\n            <FormAvances/>\r\n            </Col>\r\n          </Row>  \r\n        </Container>\r\n      </div>\r\n    )\r\n}\r\nexport default NAvance;","\r\nimport React from \"react\";\r\n\r\n\r\n\r\nconst CreateAvance =()=>{\r\n \r\n        return(\r\n            \r\n            <h1>Se creó su avance con éxito</h1>\r\n        )\r\n}\r\nexport default CreateAvance;","import React, { Component } from \"react\"\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport {\r\n    useQuery,\r\n    useMutation,\r\n    gql\r\n} from \"@apollo/client\";\r\n\r\n/*\r\nconst client = new ApolloClient({\r\n    uri: 'http://localhost:9091/consulta',\r\n    cache: new InMemoryCache()\r\n});\r\n*/\r\n\r\nconst MUTATION_AVANCE_EDITAR = gql`\r\n    mutation updateAvance($project_id:String, $description:String, $observations:String){\r\n        updateAvance(project_id:$project_id, description:$description, observations:$observations)\r\n    }\r\n`;\r\n\r\nconst Avances = () => {\r\n\r\n    const {project_id} = useParams();\r\n    console.log(project_id);\r\n\r\n    const [actualizarAvance] = useMutation(MUTATION_AVANCE_EDITAR);\r\n    let avance = {\r\n        project_id: \"\",\r\n        addDate: \"\",\r\n        description: \"\",\r\n        observations: \"\"\r\n    }\r\n\r\n    const { loading, data } = useQuery(gql`\r\n        {\r\n            avances{\r\n                project_id\r\n                addDate\r\n                description\r\n                observations\r\n            }\r\n        }\r\n    `)\r\n\r\n    console.log(data);\r\n\r\n    if (loading) return \"<h1>Cargando</h1>\"\r\n    let avances = data.avances.filter(function (u) { return u.project_id === project_id}).map(({ project_id, description, observations }) => (\r\n        <form onSubmit={e => {\r\n            e.preventDefault();\r\n            actualizarAvance({\r\n                variables: {\r\n                    project_id: avance.project_id.value,\r\n                    description: avance.description.value,\r\n                    observations: avance.observations.value\r\n                }\r\n            })\r\n            window.location.href = '/ListarAvances';\r\n            console.log(avance.observations.value)\r\n\r\n        }} >\r\n            <div className=\"text-center justify-content-center align-items-center\">\r\n                <div>\r\n                    <label className=\"p-3\">Nombre del Proyecto:</label>\r\n                    <input style={{ backgroundColor: \"#c9c9c9\" }} defaultValue={project_id} type=\"text\" ref={project_id => avance.project_id = project_id} placeholder=\"Nombre del proyecto\" readOnly />\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label className=\"p-3\">Descripción:</label>\r\n                    <input style={{width: \"250px\"}} defaultValue={description} type=\"text\" ref={description => avance.description = description} placeholder=\"Descripción\" required />\r\n                </div>\r\n                &nbsp;\r\n                <div>\r\n                    <label className=\"p-3\">Observaciones:</label>\r\n                    <input style={{width: \"250px\"}} defaultValue={observations} type=\"text\" ref={observations => avance.observations = observations} placeholder=\"Observaciones\" required />\r\n                </div>\r\n                </div>\r\n                <div className=\"text-center justify-content-center align-items-center\">\r\n                &nbsp;\r\n                <div>\r\n                    <Button className=\"bg-primary ml-4\" type=\"submit\">Actualizar</Button>\r\n                </div>\r\n                </div>\r\n            \r\n        </form>\r\n    ));\r\n\r\n    return (\r\n        <div>{avances}</div>\r\n    )\r\n}\r\n\r\nclass EditAvance extends Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row className=\"d-flex justify-content-center align-items-center mt-5\">\r\n                    <h1 className=\"d-flex justify-content-center align-items-center mt-5\">Editar Avance</h1>\r\n                    &nbsp;\r\n                    <ButtonToolbar\r\n                        style={{ display: 'flex', justifyContent: 'flex-end' }}\r\n                        aria-label=\"Toolbar with Button groups\"\r\n                    >\r\n                        <div className=\"text-center justify-content-center align-items-center\"></div> \r\n                        <Link to=\"/nuevoAvance\">\r\n                            <Button variant=\"primary\">Nuevo Avance</Button>\r\n                        </Link>\r\n                    </ButtonToolbar>\r\n                    &nbsp;\r\n                    <Avances />\r\n                </Row>\r\n\r\n            \r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditAvance;","import Container from 'react-bootstrap/Container';   \r\nimport Row from 'react-bootstrap/Row';\r\n//import Col from 'react-bootstrap/Col';\r\n\r\nimport React from \"react\";\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom'; \r\nimport Table from 'react-bootstrap/Table'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport {\r\n    ApolloClient,\r\n    InMemoryCache,\r\n    ApolloProvider,\r\n    useQuery,\r\n    gql\r\n  } from \"@apollo/client\";\r\n  const client = new ApolloClient({\r\n    uri: 'http://localhost:9091/consulta',\r\n    cache: new InMemoryCache()\r\n  }); \r\n  \r\n  const Inscripciones =()=>{\r\n    const {loading,data} = useQuery(gql`\r\n        {\r\n          inscripciones{\r\n              project_id\r\n              user_id\r\n              status\r\n              enrollmentDate\r\n              egressDate\r\n            }\r\n        }\r\n    `)\r\n    if(loading) return \"<h1>Cargando</h1>\"\r\n      const datosTabla = data.inscripciones.map(({project_id,user_id,status,enrollmentDate,egressDate})=>(\r\n        <tr >\r\n            <td >{project_id}</td>\r\n            <td>{user_id}</td>\r\n            <td>{status}</td>\r\n            <td>{enrollmentDate}</td>\r\n            <td>{egressDate}</td>\r\n        </tr>\r\n      ));\r\n      return (\r\n     \r\n        <Table striped bordered hover >\r\n            <thead>\r\n                <tr>\r\n                <th>Proyecto</th>\r\n                <th>Usuario</th>\r\n                <th>Estado de la inscripcion</th>\r\n                <th>Fecha Inscripcion</th>\r\n                <th>Fecha de salida</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {datosTabla}\r\n            </tbody>\r\n        </Table>\r\n          \r\n          )\r\n  }\r\n\r\n\r\n\r\nfunction Ninscripcion(){\r\n    return(\r\n        <div>\r\n        \r\n        <Container>\r\n                <Row  className=\"d-flex justify-content-center align-items-center mt-5\"> \r\n                    \r\n                    <ButtonToolbar\r\n                        className=\"justify-content-between mb-4\"\r\n                        aria-label=\"Toolbar with Button groups\"\r\n                        >\r\n                        <Link to=\"/Ninscripcion\">\r\n                            <Button variant=\"success\">Nueva Inscripción</Button>\r\n                            \r\n                        </Link>\r\n                        <Link to=\"/Actinicial\">\r\n                            <Button variant=\"success\">Actualizacion Inscripción </Button>\r\n                            \r\n                        \r\n                        </Link>\r\n                    </ButtonToolbar>\r\n                    <ApolloProvider client={client}>\r\n                        <Inscripciones/>\r\n                    </ApolloProvider>\r\n                    \r\n                </Row> \r\n            </Container>\r\n      </div>\r\n    )\r\n}\r\nexport default Ninscripcion;","import Container from 'react-bootstrap/Container';   \r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormProyecto from '../estudiantes/consultaEstudiantes';\r\nfunction Nproyecto(){\r\n    return(\r\n        <div>\r\n        <header>\r\n          <Container >\r\n            <Row className=\"titulo d-flex justify-content-center mt-1 mb-5\">\r\n              <Col xs={6}>\r\n                <div className=\"text-center mt-4\">\r\n                  <h1 >Modulo de inscripción</h1>\r\n                </div>\r\n              </Col>\r\n            </Row>  \r\n          </Container>\r\n        </header>\r\n        <Container >\r\n          <Row className=\"d-flex justify-content-center mt-5\">\r\n            <Col md={6} xs={10} /*className=\"border border-dark rounded d-flex justify-content-center \"*/>{/* bg-info */}\r\n            <FormProyecto/>\r\n            </Col>\r\n          </Row>  \r\n        </Container>\r\n      </div>\r\n    )\r\n}\r\nexport default Nproyecto;","\r\nimport React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import { Link } from 'react-router-dom';\r\n//import Button from 'react-bootstrap/Button';\r\n\r\nimport {\r\n  gql, useMutation\r\n} from \"@apollo/client\";\r\n\r\nconst MUTATION_INSCRIPCION=gql`\r\n  mutation crearProyecto( $project_id: String\r\n    $user_id: String\r\n    $status: String\r\n    $enrollmentDate: String\r\n    $egressDate: String\r\n    \r\n      \r\n      ){\r\n        createInscripcion(Inscripcion:{project_id: $project_id,\r\n          user_id: $user_id,\r\n         status: $status,\r\n         enrollmentDate: $enrollmentDate,\r\n         egressDate: $egressDate\r\n              })\r\n       }\r\n`;\r\n\r\n\r\n\r\n\r\nconst FormProyecto =()=>{\r\n  const[creadorDeInscricion] = useMutation(MUTATION_INSCRIPCION);\r\n  let inscripcion ={\r\n    project_id: \" \",\r\n    user_id: \" \",\r\n    status:\" \",\r\n    enrollmentDate:\" \",\r\n    egressDate:\" \"\r\n   \r\n  }\r\n\r\n        return(\r\n          <form onSubmit={e => {\r\n            e.preventDefault();\r\n            creadorDeInscricion({variables:{\r\n              project_id: inscripcion.project_id.value,\r\n              user_id:inscripcion.user_id.value,\r\n              status:inscripcion.status.value,\r\n              enrollmentDate:inscripcion.enrollmentDate.value,\r\n              egressDate:inscripcion.egressDate.value,\r\n              \r\n              \r\n          }})\r\n          window.location.href = '/ConsultaEstudiante';\r\n          }}>\r\n <div className=\"text-center mt-4\">\r\n                  <h1 >Nueva inscripción</h1>\r\n                </div>\r\n<div className=\"text-center mt-4\">\r\n  \r\n                <label   class=\"p-3\">Nombre Proyecto</label>\r\n                <input ref={project_id =>inscripcion.project_id = project_id} placeholder=\"Proyecto\" required/>\r\n            </div>\r\n            <div className=\"text-center mt-4\">\r\n                <label  class=\"p-3\">Correo del usuario</label>\r\n                <input ref={user_id => inscripcion.user_id = user_id} placeholder=\"usuario\" required/>\r\n            </div>\r\n            \r\n            <div className=\"text-center mt-4\">\r\n                <label  class=\"p-3\">fecha inicial</label>\r\n                <input type=\"date\" ref={enrollmentDate => inscripcion.enrollmentDate =enrollmentDate} placeholder=\"fecha inicial\" required/>\r\n            </div>\r\n            <div className=\"text-center mt-4\">\r\n                <label class=\"p-3\">fecha final</label>\r\n                <input type=\"date\" ref={egressDate => inscripcion.egressDate = egressDate} placeholder=\"fecha final\" required/>\r\n            </div>\r\n            \r\n            <div class=\"text-center \"><button class=\"bg-success\"type=\"submit\" >Registrar </button>\r\n\r\n            </div>\r\n            \r\n        </form>\r\n        )\r\n}\r\nexport default FormProyecto;","import React, { useState} from \"react\";\r\n//import React from \"react\";\r\n//import Button from 'react-bootstrap/Button';\r\n//import { Link } from 'react-router-dom';\r\nimport {Form,Row,Col} from 'react-bootstrap';\r\nimport {useMutation } from \"@apollo/client\";\r\nimport {gql} from \"@apollo/client\";\r\n//import { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst MUTATION_INSCRIPCION=gql`\r\n       mutation updateStatusInscripcion($user_id: String, $status: String){\r\n        updateStatusInscripcion(user_id:$user_id, status: $status)\r\n       }\r\n`;\r\n  \r\nconst Phoneform=()=>{\r\n  const [user_id, setName]=useState('')\r\n  const [status, setPhone]=useState('')\r\n  \r\n  const [changeNumber] = useMutation(MUTATION_INSCRIPCION )\r\n  const handleSubmit = e =>{\r\n\r\ne.preventDefault()\r\n  \r\nchangeNumber({variables:{user_id,status}})\r\nsetName('')\r\nsetPhone('')\r\nwindow.location.reload(true);\r\n  }\r\n\r\nreturn (\r\n\r\n\r\n<div>\r\n<div className=\"text-center mt-4\">\r\n                  <h1 > Actualizar Estado de los usuarios</h1>\r\n                </div>\r\n                \r\n                <form onSubmit={handleSubmit} >\r\n                \r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n    <Form.Label>Nombre del usuario</Form.Label>\r\n    <Form.Control type=\"user_id\" placeholder=\"nombre completo del usuario\" id=\"user_id\" value={user_id} onChange={evt => setName(evt.target.value)}/>\r\n    <Form.Text className=\"text-muted\">\r\n     \r\n    </Form.Text>\r\n  </Form.Group>\r\n\r\n  <Form.Group as={Row} className=\"mb-3\">\r\n      <Form.Label as=\"legend\" column sm={2}>\r\n        Estado\r\n      </Form.Label>\r\n      <Col sm={10}>\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"acepted\"\r\n          name=\"formHorizontalRadios\"\r\n          id=\"user_id\" value=\"acepted\" onChange={evt => setPhone(evt.target.value)}\r\n        />\r\n        <Form.Check\r\n          type=\"radio\"\r\n          label=\"rejected\"\r\n          name=\"formHorizontalRadios\"\r\n          id=\"user_id\" value=\"rejected\" onChange={evt => setPhone(evt.target.value)}\r\n        />\r\n       \r\n      </Col>\r\n    </Form.Group>\r\n   \r\n            <div><button type=\"submit\">Registrar </button></div>\r\n          \r\n                </form>\r\n       </div>\r\n        \r\n        \r\n        \r\n  \r\n)\r\n\r\n\r\n}\r\nexport default Phoneform;\r\n\r\n","import React, { Component } from \"react\"\r\n  import Row from 'react-bootstrap/Row';\r\n  import Container from 'react-bootstrap/Container';\r\n  // import Button from 'react-bootstrap/Button';\r\n  // import { Link } from 'react-router-dom'; \r\n  import Table from 'react-bootstrap/Table'\r\n  // import Tabla from './Tabla';\r\n  // import ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\n  //import { useParams } from \"react-router-dom\";\r\n\r\nimport {\r\n    useQuery,\r\n    gql\r\n  } from \"@apollo/client\";\r\n  \r\n  const Proyectos =()=>{\r\n    //const {name}=useParams();\r\n    const {loading,data} = useQuery(gql`\r\n        {\r\n            inscripciones{\r\n                project_id\r\n                user_id\r\n                status\r\n                enrollmentDate\r\n                egressDate\r\n                role\r\n              }\r\n          }\r\n    `)\r\n\r\n    if(loading) return \"<h1>Cargando</h1>\"\r\n    let proyectos2 = data.inscripciones.filter(function (proyecto) {\r\n        return proyecto.status === \"Pending\";\r\n    }).map(({project_id,user_id,status,enrollmentDate,egressDate,role})=>(\r\n      \r\n        <tr key={project_id}>\r\n            <td>{project_id}</td>\r\n            <td>{user_id}</td>\r\n            <td>{status}</td>\r\n            <td>{enrollmentDate}</td>\r\n            <td>{egressDate}</td> \r\n            <td>{role}</td>\r\n            <td>\r\n            </td>\r\n        </tr> \r\n       \r\n      )\r\n      );\r\n\r\n      \r\n      return (\r\n\r\n        <Table striped bordered hover >\r\n            <thead>\r\n                <tr>\r\n                <th>Nombre</th>\r\n                <th>Usuario</th>\r\n                <th>estado</th>\r\n                <th>Fecha Inicio</th>\r\n                <th>Fecha Final</th>\r\n                <th>roll</th>\r\n              \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {proyectos2}\r\n            </tbody>\r\n        </Table>\r\n        \r\n          )\r\n  }\r\n\r\nclass ListaProductoFiltro extends Component {\r\n    render () {\r\n        return (\r\n            <Container>\r\n                <Row  className=\"d-flex justify-content-center align-items-center mt-5\"> \r\n                    <h1 >Solicitudes Pendientes</h1>\r\n                    \r\n                    \r\n                    <Proyectos/>\r\n                    \r\n                    \r\n                </Row> \r\n            </Container>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default ListaProductoFiltro;","import React, { Component } from \"react\"\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container'; \r\nimport Actualizar from '../estudiantes/actualizaEstado'\r\nimport BusquedadI from '../IngresoInscripcion/busquedaItems'\r\n//import TablaVentas from './TablaVentas';\r\n//import Tabla from './components/ventas/components/administrador_Venta/Tabla';\r\n//import BarraVentas from './Barra';\r\nclass ListaVentas extends Component {\r\n    render () {\r\n        return (\r\n            <Container>\r\n                <Row  className=\"d-flex justify-content-center align-items-center mt-5\"> \r\n                    <Actualizar/>\r\n                    <BusquedadI/>\r\n                </Row> \r\n            </Container>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default ListaVentas;","//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Nproyecto from './components/proyectos/proyecto_nuevo/nuevoProyecto'\r\nimport Home from './components/Home/home'\r\nimport NavBar from './components/nav/nav'\r\nimport ListaProductos from './components/proyectos/listarProyectos/listarProyectos'\r\nimport EditarProyecto from './components/proyectos/proyecto_nuevo/editarProyecto'\r\nimport AñadirIntegrantes from './components/proyectos/proyecto_nuevo/añadirIntegrantes'\r\nimport ListaProductoFiltro from'./components/proyectos/listarProyectos/listarUno'\r\nimport ListaUsuarios from './components/usuarios/listarUsuarios/listarUsuarios'\r\nimport NuevoUsuario from './components/usuarios/nuevoUsuario/nuevoUsuario'\r\nimport EditarUsuario from './components/usuarios/editarUsuario/editarUsuario'\r\nimport Login from './components/login/login'\r\nimport RegistrarUsuario from './components/usuarios/nuevoUsuario/registrarUsuario'\r\nimport ListarAvances from './components/avances/verAvances'\r\nimport NAvance from './components/avances/nuevoAvance'\r\nimport CreateAvance from './components/avances/avanceCreado'\r\nimport FormAvances from './components/avances/formAvances'\r\nimport EditAvance from './components/avances/editarAvances'\r\nimport IngresoIncricion from './components/inscripciones/IngresoInscripcion/ingreso'\r\nimport ConsultaEstudiante from './components/inscripciones/estudiantes/consultaEstudiantes'\r\nimport Ninscripcion from './components/inscripciones/IngresoInscripcion/formularioinsc'\r\nimport ActualizaEstado from './components/inscripciones/estudiantes/actualizaEstado'\r\nimport Actinicial from './components/inscripciones/IngresoInscripcion/formIncripcion'\r\nimport BusquedaI from './components/inscripciones/IngresoInscripcion/busquedaItems'\r\nimport {\r\n  ApolloProvider,\r\n  ApolloClient,\r\n  InMemoryCache,\r\n} from \"@apollo/client\";\r\nconst client = new ApolloClient({\r\n  uri: 'http://localhost:9091/consulta',\r\n  cache: new InMemoryCache()\r\n}); \r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n      <Route path=\"/\" exact>\r\n          <Home />\r\n      </Route>\r\n      <Route path=\"/home\" exact>\r\n          <Home/>\r\n      </Route>\r\n      <Route path=\"/proyectos\" exact>\r\n        <NavBar pagina={\"/proyectos\"}/>\r\n        <ApolloProvider client={client}>\r\n           <ListaProductos/>\r\n        </ApolloProvider>  \r\n      </Route>\r\n      <Route path=\"/proyectos/:name\" exact>\r\n        <NavBar pagina={\"/proyectos\"}/>\r\n        <ApolloProvider client={client}>\r\n           <ListaProductoFiltro/>\r\n        </ApolloProvider>  \r\n      </Route>\r\n      <Route path=\"/Nproyecto\" exact>\r\n        <NavBar pagina={\"/Nproyecto\"}/>\r\n        <ApolloProvider client={client}>\r\n          <Nproyecto/>\r\n        </ApolloProvider> \r\n      </Route>\r\n      <Route path=\"/editarProyecto/:_id\" exact>\r\n        <NavBar pagina={\"/editarProyecto\"}/>\r\n        <ApolloProvider client={client}>\r\n            <EditarProyecto/>\r\n        </ApolloProvider> \r\n      </Route>\r\n      <Route path=\"/añadir/:_id\" exact>\r\n        <NavBar pagina={\"/añadir\"}/>\r\n        <ApolloProvider client={client}>\r\n            <AñadirIntegrantes/>\r\n        </ApolloProvider> \r\n      </Route>\r\n      <Route path=\"/usuarios\" exact>\r\n          <NavBar pagina={\"/usuarios\"} />\r\n          <ListaUsuarios />\r\n        </Route>\r\n        <Route path=\"/crearUsuario\" exact>\r\n          <NavBar pagina={\"/crearUsuario\"} />\r\n          <ApolloProvider client={client}>\r\n            <NuevoUsuario />\r\n          </ApolloProvider>\r\n        </Route>\r\n        <Route path=\"/editarUsuario/:_id\" exact>\r\n          <NavBar pagina={\"/editarUsuario\"} />\r\n          <ApolloProvider client={client}>\r\n            <EditarUsuario />\r\n          </ApolloProvider>\r\n        </Route>\r\n        <Route path=\"/login\" exact>\r\n          <ApolloProvider client={client}>\r\n            <Login />\r\n          </ApolloProvider>\r\n        </Route>\r\n        <Route path=\"/registrarUsuario\" exact>\r\n          <ApolloProvider client={client}>\r\n            <RegistrarUsuario />\r\n          </ApolloProvider>\r\n        </Route>\r\n        <Route path=\"/ListarAvances\" exact>\r\n        <NavBar pagina={\"/ListarAvances\"}/>\r\n        <ApolloProvider client={client}>\r\n          <ListarAvances/>\r\n        </ApolloProvider>\r\n      </Route>\r\n      <Route path=\"/NuevoAvance\" exact>\r\n        <NavBar pagina={\"/NuevoAvance\"}/>\r\n        <ApolloProvider client={client}>\r\n          <NAvance/>\r\n        </ApolloProvider>\r\n      </Route>\r\n      <Route path=\"/formAvances\" exact>\r\n        <NavBar pagina={\"/formAvances\"}/>\r\n        <ApolloProvider client={client}>\r\n          <FormAvances/>\r\n        </ApolloProvider>\r\n      </Route>\r\n      <Route path=\"/AvanceCreado\" exact>\r\n        <NavBar pagina={\"/AvanceCreado\"}/>\r\n        <ApolloProvider client={client}>\r\n            <CreateAvance/>\r\n        </ApolloProvider> \r\n      </Route>       \r\n      <Route path=\"/EditarAvances/:project_id\" exact>\r\n        <NavBar pagina={\"/EditarAvances/\"}/>\r\n        <ApolloProvider client={client}>\r\n            <EditAvance/>\r\n        </ApolloProvider>\r\n      </Route>\r\n\r\n      <Route path=\"/IngresoIncricion\" exact>\r\n        <NavBar pagina={\"/IngresoIncricion\"}/>\r\n        <IngresoIncricion/>\r\n      </Route>\r\n\r\n      <Route path=\"/ConsultaEstudiante\" exact>\r\n        <NavBar pagina={\"/ConsultaEstudiante\"}/>\r\n        <ConsultaEstudiante/>\r\n      </Route>\r\n\r\n\r\n      <Route path=\"/Ninscripcion\" exact>\r\n        <NavBar pagina={\"/Ninscripcion\"}/>\r\n        <ApolloProvider client={client}>\r\n          <Ninscripcion/>\r\n        </ApolloProvider> \r\n      </Route>\r\n\r\n     \r\n      <Route path=\"/ActualizaEstado\" exact>\r\n        <NavBar pagina={\"/ActualizaEstado\"}/>\r\n        <ApolloProvider client={client}>\r\n          <ActualizaEstado/>\r\n        </ApolloProvider> \r\n      </Route>\r\n\r\n      <Route path=\"/Actinicial\" exact>\r\n        <NavBar pagina={\"/Actinicial\"}/>\r\n        <ApolloProvider client={client}>\r\n          <Actinicial/>\r\n        </ApolloProvider> \r\n      </Route>\r\n      <Route path=\"/BusquedaI\" exact>\r\n        <NavBar pagina={\"/BusquedaI\"}/>\r\n        <ApolloProvider client={client}>\r\n          <BusquedaI/>\r\n        </ApolloProvider> \r\n      </Route>\r\n\r\n\r\n\r\n      </Switch>\r\n    </Router>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}